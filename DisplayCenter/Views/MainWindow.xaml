<mw:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:DisplayCenter.Views"
                xmlns:svm="clr-namespace:DisplayCenter.UI.Solution.ViewModels;assembly=DisplayCenter.UI.Solution"
                xmlns:mw="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                xmlns:vm="clr-namespace:DisplayCenter.ViewModels"
                xmlns:view="clr-namespace:DisplayCenter.Views"
                xmlns:slnView="clr-namespace:DisplayCenter.UI.Solution.Views;assembly=DisplayCenter.UI.Solution"
                xmlns:suitesWpf="clr-namespace:Suites.Wpf.App;assembly=Suites.Wpf.App"
                xmlns:swa="http://suites.com/"
                xmlns:log="clr-namespace:Microsoft.Extensions.Logging.Control;assembly=Suites.Wpf.Core"
                xmlns:suitesWpfInter="clr-namespace:Suites.Wpf.App.Interactivity;assembly=Suites.Wpf.App"
                xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                xmlns:prism="http://prismlibrary.com/"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                x:Class="DisplayCenter.Views.MainWindow"
                mc:Ignorable="d"
                UseNoneWindowStyle="True"
                Topmost="{Binding TopMost}"
                IgnoreTaskbarOnMaximize="True"
                ResizeMode="NoResize"
                WindowStartupLocation="CenterScreen"
                WindowState="Maximized"
                Title="{Binding Caption}"
                prism:ViewModelLocator.AutoWireViewModel="True"
                suitesWpf:WindowAttacher.Close="{Binding DialogResult}"
                FontSize="14">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries></ResourceDictionary.MergedDictionaries>
      <Style x:Key="MetroStyleSystemStatusBar"
             TargetType="{x:Type StatusBar}"
             BasedOn="{StaticResource MetroStatusBar}">
        <Style.Triggers>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}"
                         Value="True" />
              <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
                         Value="True" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Background"
                    Value="{DynamicResource SecondaryAccentBrush}" />
          </MultiDataTrigger>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}"
                         Value="True" />
              <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
                         Value="False" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Background"
                    Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mw:MetroWindow}}}" />
          </MultiDataTrigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Window.Resources>
  <!--<mw:MetroWindow.WindowButtonCommands>
        <mw:WindowButtonCommands Style="{DynamicResource MahApps.Metro.Styles.WindowButtonCommands.Win10}" />
    </mw:MetroWindow.WindowButtonCommands>-->
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Closing">
      <prism:InvokeCommandAction Command="{Binding BeforeClosingCommand}" />
    </i:EventTrigger>
    <prism:InteractionRequestTrigger SourceObject="{Binding PopupCachedImageWindowRequest}">
      <suitesWpfInter:PopupNewWindowAction IsModal="True"
                                           CenterOverAssociatedObject="True"
                                           WindowContentType="{x:Type slnView:CachedImageWindow}" />
    </prism:InteractionRequestTrigger>
  </i:Interaction.Triggers>
  <DockPanel>
    <Grid DockPanel.Dock="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Image Source="/SimpleEye;component/标识-白色背景.png"
             Stretch="Uniform"
             Margin="10 0"
             VerticalAlignment="Center"
             HorizontalAlignment="Left"
             Width="250" />
      <materialDesign:ColorZone HorizontalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Padding="16"
                                Margin="3"
                                Width="600"
                                materialDesign:ShadowAssist.ShadowDepth="Depth4"
                                Mode="PrimaryMid"
                                Grid.Column="1"
                                CornerRadius="10">
        <TextBlock VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{Binding CaptionFontSize}"
                   Text="{Binding Caption}" />
      </materialDesign:ColorZone>
      <StackPanel Grid.Column="2"
                  Orientation="Horizontal"
                  Margin="5"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center">
        <swa:Clock Margin="0 0 20 0"
                   FontSize="25"
                   VerticalAlignment="Center" />
        <materialDesign:PopupBox HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 Margin="5"
                                 PlacementMode="BottomAndAlignRightEdges"
                                 StaysOpen="False">
          <StackPanel MinWidth="150"
                      Orientation="Vertical">
            <Button HorizontalContentAlignment="Left">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconMaterial Kind="Settings"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="选项"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Separator />
            <Button HorizontalContentAlignment="Left">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconMaterial Kind="History"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="历史记录"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Button HorizontalContentAlignment="Left"
                    Command="{Binding CommonCommandCollection.ClearSummaryCommand}">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconModern Kind="Clear"
                                            Margin="3"
                                            VerticalAlignment="Center" />
                  <TextBlock Text="清除统计"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Button HorizontalContentAlignment="Left"
                    Command="{Binding CommonCommandCollection.ClearCachedImageCommand}">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconMaterial Kind="ImageFilter"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="清除图像"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Separator />
            <Button HorizontalContentAlignment="Left"
                    Command="{Binding CommonCommandCollection.ShutdownAllHostCommand}">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconMaterial Kind="Power"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="关机所有主机"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Button HorizontalContentAlignment="Left"
                    Command="{Binding CommonCommandCollection.RestartAllHostCommand}">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconMaterial Kind="Restart"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="重启所有主机"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
            <Separator />
            <Button HorizontalContentAlignment="Left"
                    Command="{Binding QuitCommand}">
              <Button.Content>
                <StackPanel Orientation="Horizontal">
                  <iconPacks:PackIconOcticons Kind="SignOut"
                                              Margin="3"
                                              VerticalAlignment="Center" />
                  <TextBlock Text="仅退出程序"
                             Margin="3" />
                </StackPanel>
              </Button.Content>
            </Button>
          </StackPanel>
        </materialDesign:PopupBox>
      </StackPanel>
    </Grid>
    <StatusBar DockPanel.Dock="Bottom"
               Style="{DynamicResource MetroStyleSystemStatusBar}"
               Height="35"
               FontSize="18">
      <StatusBarItem Content="{iconPacks:Modern BookOpenInformation, Width=22, Height=22}"
                     HorizontalAlignment="Left" />
      <!--<Separator Style="{DynamicResource MetroStatusBarSeparator}"/>-->
      <StatusBarItem Content="{Binding Status}"
                     ToolTip="系统状态"
                     HorizontalAlignment="Left" />
    </StatusBar>
    <Expander DockPanel.Dock="Right"
              Background="Transparent"
              BorderThickness="0"
              ExpandDirection="Left"
              IsExpanded="{Binding ShowExtensionArea}">
      <Expander.Header>
        <TextBlock Text="扩展区"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="20"
                   RenderTransformOrigin=".5,.5">
          <TextBlock.LayoutTransform>
            <RotateTransform Angle="-90" />
          </TextBlock.LayoutTransform></TextBlock>
      </Expander.Header>
      <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
        <StackPanel Margin="15" MaxWidth="500">
          <materialDesign:Card MinWidth="400"
                               HorizontalAlignment="Right"
                               Margin="5"
                               UniformCornerRadius="10"
                               materialDesign:ShadowAssist.ShadowDepth="Depth4">
            <Expander Style="{DynamicResource MetroExpander}"
                      BorderThickness="0"
                      Header="日志"
                      ExpandDirection="Down"
                      IsExpanded="True">
              <TextBox TextWrapping="Wrap"
                       VerticalAlignment="Stretch"
                       AcceptsReturn="True"
                       VerticalScrollBarVisibility="Auto"
                       SpellCheck.IsEnabled="True"
                       Height="300"
                       log:LoggerControlAttacher.Wire="True"
                       log:LoggerControlAttacher.RefreshInterval="2000"
                       log:LoggerControlAttacher.AutoClearWhenMeetCount="1000" />
            </Expander>
          </materialDesign:Card>
        </StackPanel>
      </ScrollViewer>
    </Expander>
    <ScrollViewer Margin="15"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
      <ItemsControl ItemsSource="{Binding SolutionViewModels}"
                    FontSize="{Binding SVMCardFontSize}">
        <ItemsControl.ItemTemplate>
          <DataTemplate DataType="{x:Type svm:SolutionViewModel}">
            <slnView:SolutionView Margin="10" />
          </DataTemplate>
        </ItemsControl.ItemTemplate>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel ItemHeight="{Binding SVMCardHeight}"
                       ItemWidth="{Binding SVMCardWidth}" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </ScrollViewer>
  </DockPanel>
</mw:MetroWindow>
